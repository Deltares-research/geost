[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "geost"
dynamic = ["version"]
maintainers = [
    {name = "Erik van Onselen", email = "erik.vanonselen@deltares.nl"},
    {name = "Bas Knaake", email = "bas.knaake@deltares.nl"},
]
description = "The Python interface for geological point data in The Netherlands"
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    "geost",
    "bro",
    "borehole",
    "well log",
    "cpt",
    "geology",
    "subsurface toolbox",
    "deltares", 
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.12"
dependencies = [
    "numpy",
    "pandas>=2.0.1",
    "pyarrow",
    "lxml",
    "pooch",
    "pyproj",
    "geopandas",
    "xlrd",
    "openpyxl",
	"rioxarray>=0.15.3",
    "shapely>=2.0.1",
    "pyvista>=0.36.1", 
]

[project.urls]
Homepage = "https://github.com/Deltares-research/geost"
Repository = "https://github.com/Deltares-research/geost"
Issues = "https://github.com/Deltares-research/geost/issues"

[tool.hatch.version]
path = "geost/__init__.py"

[tool.hatch.build.targets.sdist]
only-include = ["geost", "tests"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tool.pixi.dependencies]
python = ">=3.12"
numpy = "*"
pandas = "*"
pyarrow = "*"
lxml = "*"
pyproj = "*"
geopandas = "*"
xlrd = "*"
openpyxl = "*"
shapely = "*"
pyvista = "*"
black = "*"
pytest = "*"
pytest-cov = "*"
ruff = "*"
sphinx = "*"
pip = "*"
rioxarray = "*"
xarray = "*"
netcdf4 = "*"
dask = "*"
pydap = "*"
myst-parser = "*"
pydata-sphinx-theme = "*"
sphinx-design = "*"
myst-nb = "*"
pooch = "*"

[tool.pixi.pypi-dependencies]
geost = { path = ".", editable = true }

[tool.pixi.tasks]
test = "python -m pytest --verbose --cov=geost --cov-report xml --cov-report term"
docs = "sphinx-build -b html docs ./docs/build"
format = "black ."
lint = "ruff check --fix ./geost"
rm_jupyter = "rm -r ./docs/jupyter_execute"
rm_build = "rm -r ./docs/build"
rm_generated = "rm -r ./docs/api_reference/generated"
rebuild_docs = { depends_on = ["rm_jupyter", "rm_build", "rm_generated", "docs"] }

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.feature.py313.dependencies]
python = "3.13.*"

[tool.pixi.environments]
default = { features = ["py313"], solve-group = "py313" }
py312 = { features = ["py312"], solve-group = "py312" }
py313 = { features = ["py313"], solve-group = "py313" }

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
markers = [
	"unittest: test of single component",
	"integrationtest: test of multiple components",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
]

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["F", "E", "W", "N", "I001"]
ignore = ["F401", "E501", "F811"]
unfixable = ["F401"]
pydocstyle.convention = "numpy"
